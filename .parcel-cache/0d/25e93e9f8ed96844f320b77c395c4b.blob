var helpers = require("../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "RegistrationView", function () {
    return RegistrationView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactBootstrapForm = require('react-bootstrap/Form');
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _jsxFileName = "/Users/timtaylor/Documents/myFlix-client-main/src/components/registration-view/registration-view.jsx", _s = $RefreshSig$();
  function RegistrationView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthday, setBirthday] = _react.useState('');
    const [usernameError, setUsernameError] = _react.useState({});
    const [passwordError, setPasswordError] = _react.useState({});
    const [emailError, setEmailError] = _react.useState({});
    const handleRegister = e => {
      e.preventDefault();
      console.log(username, password, email, birthday);
      const isValid = formValidation();
      if (isValid) {
        _axiosDefault.default.post('https://timsmyflix.herokuapp.com/users', {
          Username: username,
          Password: password,
          Email: email,
          Birthday: birthday
        }).then(response => {
          const data = response.data;
          console.log(data);
          window.open('/', '_self');
        }).catch(e => {
          console.log('error registering the user');
        });
      }
    };
    const formValidation = () => {
      const usernameError = {};
      const passwordError = {};
      const emailError = {};
      let isValid = true;
      if (username.trim().length < 5) {
        usernameError.usernameShort = "Username must be at least 5 characters";
        isValid = false;
      }
      if (password.trim().length < 1) {
        passwordError.passwordMissing = "You must enter a password";
        isValid = false;
      }
      if (!email.includes(".") && !email.includes("@")) {
        emailError.emailNotEmail = "A valid email address is required";
        isValid = false;
      }
      setUsernameError(usernameError);
      setPasswordError(passwordError);
      setEmailError(emailError);
      return isValid;
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "registerUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 66,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67,
          columnNumber: 17
        }
      }, "Username"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68,
          columnNumber: 17
        }
      })), Object.keys(usernameError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 72,
              columnNumber: 21
            }
          }, usernameError[key])
        );
      }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "registerPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 78,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 79,
          columnNumber: 17
        }
      }, "Password"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "password",
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 80,
          columnNumber: 17
        }
      })), Object.keys(passwordError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85,
              columnNumber: 21
            }
          }, usernameError[key])
        );
      }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "registerEmail",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 92,
          columnNumber: 17
        }
      }, "Email"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setEmail(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 93,
          columnNumber: 17
        }
      })), Object.keys(emailError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 97,
              columnNumber: 21
            }
          }, emailError[key])
        );
      }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "registerBirthday",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 103,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 104,
          columnNumber: 17
        }
      }, "Birthdate"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setBirthday(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 105,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "primary",
        type: "submit",
        onClick: handleRegister,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 108,
          columnNumber: 13
        }
      }, "Register"))
    );
  }
  _s(RegistrationView, "/Tsqoa7lX1FidQNnj1LoUhpVFGs=");
  _c = RegistrationView;
  var _c;
  $RefreshReg$(_c, "RegistrationView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
