var helpers = require("../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRedux = require('react-redux');
  var _actionsActions = require('../../actions/actions');
  var _moviesListMoviesList = require('../movies-list/movies-list');
  var _moviesListMoviesListDefault = _parcelHelpers.interopDefault(_moviesListMoviesList);
  var _reactRouterDom = require('react-router-dom');
  var _reactBootstrapRow = require('react-bootstrap/Row');
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _reactBootstrapCol = require('react-bootstrap/Col');
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _loginViewLoginView = require('../login-view/login-view');
  var _registrationViewRegistrationView = require('../registration-view/registration-view');
  var _movieViewMovieView = require('../movie-view/movie-view');
  var _directorViewDirectorView = require('../director-view/director-view');
  var _genreViewGenreView = require('../genre-view/genre-view');
  var _profileViewProfileView = require('../profile-view/profile-view');
  var _profileUpdateProfileUpdate = require('../profile-update/profile-update');
  var _jsxFileName = "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        user: null
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem('token');
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem('user')
        });
        this.getMovies(accessToken);
      }
    }
    onLoggedIn(authData) {
      console.log(authData);
      this.setState({
        user: authData.user.Username
      });
      localStorage.setItem('token', authData.token);
      localStorage.setItem('user', authData.user.Username);
      localStorage.setItem('email', authData.user.Email);
      localStorage.setItem('birthday', authData.user.Birthday);
      localStorage.setItem('favoriteMovies', JSON.stringify(authData.user.FavoriteMovies));
      this.getMovies(authData.token);
      const favMoves = localStorage.getItem('FavoriteMovies');
      console.log(favMovis);
    }
    getMovies(token) {
      _axiosDefault.default.get('https://timsmyflix.herokuapp.com/movies', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        this.props.setMovies(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    logOut() {
      localStorage.clear();
      this.setState({
        user: null
      });
      console.log("logout successful");
      window.open("/", "_self");
    }
    render() {
      const {user} = this.state;
      const {movies} = this.props;
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 86,
            columnNumber: 4
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 87,
            columnNumber: 5
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "insert-navbar",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88,
            columnNumber: 6
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 89,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "link",
          className: "navbar-link",
          onClick: () => this.logOut(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 90,
            columnNumber: 8
          }
        }, "Sign Out")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/users/${user}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 98,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "link",
          className: "navbar-link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 8
          }
        }, "My Profile"))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105,
            columnNumber: 6
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 108,
                  columnNumber: 26
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 109,
                  columnNumber: 9
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 112,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_moviesListMoviesListDefault.default, {
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114,
                  columnNumber: 15
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 107,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            if (user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Redirect, {
                to: "/",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 118,
                  columnNumber: 25
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 119,
                  columnNumber: 15
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 120,
                  columnNumber: 9
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 117,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 125,
                  columnNumber: 26
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 126,
                  columnNumber: 9
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 129,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 131,
                  columnNumber: 15
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 132,
                  columnNumber: 9
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 124,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 137,
                  columnNumber: 26
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 138,
                  columnNumber: 9
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 141,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 143,
                  columnNumber: 15
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name).Director,
                movies: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 144,
                  columnNumber: 9
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 150,
                  columnNumber: 26
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 151,
                  columnNumber: 9
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 154,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 156,
                  columnNumber: 15
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name).Genre,
                onBackClick: () => history.goBack(),
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 157,
                  columnNumber: 9
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 149,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/users/:userId",
          render: ({history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 162,
                  columnNumber: 26
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 163,
                  columnNumber: 9
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 166,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 168,
                  columnNumber: 15
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileView.ProfileView, {
                movies: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 169,
                  columnNumber: 9
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 161,
            columnNumber: 7
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/update/:userId",
          render: ({history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 6,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 175,
                  columnNumber: 26
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 176,
                  columnNumber: 9
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 179,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 181,
                  columnNumber: 15
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_profileUpdateProfileUpdate.ProfileUpdate, {
                movies: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 182,
                  columnNumber: 9
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 7
          }
        }))))
      );
    }
  }
  let mapStateToProps = state => {
    return {
      movies: state.movies
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actionsActions.setMovies
  })(MainView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
