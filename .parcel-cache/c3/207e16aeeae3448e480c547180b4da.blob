var helpers = require("../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "LoginView", function () {
    return LoginView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('prop-types');
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactBootstrapForm = require('react-bootstrap/Form');
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactRouterDom = require('react-router-dom');
  require("./login-view.scss");
  var _jsxFileName = "/Users/timtaylor/Documents/myFlix-client-main/src/components/login-view/login-view.jsx", _s = $RefreshSig$();
  function LoginView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [usernameError, setUsernameError] = _react.useState({});
    const [passwordError, setPasswordError] = _react.useState({});
    const handleSubmit = e => {
      e.preventDefault();
      console.log(username, password);
      const isValid = formValidation();
      if (isValid) {
        _axiosDefault.default.post('https://flixinfo.herokuapp.com/login', {
          Username: username,
          Password: password
        }).then(response => {
          const data = response.data;
          props.onLoggedIn(data);
        }).catch(e => {
          console.log('no such user');
        });
      }
    };
    const formValidation = () => {
      const usernameError = {};
      const passwordError = {};
      let isValid = true;
      if (username.trim().length < 5) {
        usernameError.usernameShort = "Username must be at least 5 characters";
        isValid = false;
      }
      if (password.trim().length < 1) {
        passwordError.passwordMissing = "You must enter a password";
        isValid = false;
      }
      setUsernameError(usernameError);
      setPasswordError(passwordError);
      return isValid;
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      }, "Username"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 17
        }
      })), Object.keys(usernameError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 63,
              columnNumber: 21
            }
          }, usernameError[key])
        );
      }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 70,
          columnNumber: 17
        }
      }, "Password"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "password",
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71,
          columnNumber: 17
        }
      })), Object.keys(passwordError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 75,
              columnNumber: 21
            }
          }, usernameError[key])
        );
      }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "primary",
        type: "submit",
        onClick: handleSubmit,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 81,
          columnNumber: 13
        }
      }, "Submit"), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
        to: `/register`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 82,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "outline-primary",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 83,
          columnNumber: 17
        }
      }, "Not Registered? Register")))
    );
  }
  _s(LoginView, "Lnry4UU+NkjRgin55tt8rHmJj2o=");
  _c = LoginView;
  var _c;
  $RefreshReg$(_c, "LoginView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
