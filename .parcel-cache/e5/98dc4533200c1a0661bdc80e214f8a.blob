var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
var _actions = require("../../actions/actions");
// has not been written yet
var _moviesList = require("../movies-list/movies-list");
var _moviesListDefault = parcelHelpers.interopDefault(_moviesList);
var _reactRouterDom = require("react-router-dom");
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _reactBootstrap = require("react-bootstrap");
var _loginView = require("../login-view/login-view");
var _registrationView = require("../registration-view/registration-view");
var _movieView = require("../movie-view/movie-view");
var _directorView = require("../director-view/director-view");
var _genreView = require("../genre-view/genre-view");
var _profileView = require("../profile-view/profile-view");
var _profileUpdate = require("../profile-update/profile-update");
var _mainViewScss = require("./main-view.scss");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.props.setUser(localStorage.getItem('user'));
            this.getMovies(accessToken);
        }
    }
    onLoggedIn(authData) {
        console.log(authData);
        this.props.setUser(authData.user.Username);
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        localStorage.setItem('email', authData.user.Email);
        localStorage.setItem('birthday', authData.user.Birthday);
        localStorage.setItem('favoriteMovies', JSON.stringify(authData.user.FavoriteMovies));
        this.getMovies(authData.token);
    }
    getMovies(token) {
        _axiosDefault.default.get('https://timsmyflix.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            this.props.setMovies(response.data);
        }).catch(function(error) {
            console.log(error);
        });
    }
    logOut() {
        localStorage.clear();
        this.props.setUser(null);
        console.log("logout successful");
        window.open("/", "_self");
    }
    render() {
        const { movies , user  } = this.props;
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-div",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 75
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 76
            },
            __self: this
        }, user ? /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar, {
            className: "navbar navbar-light bg-light",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 78
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 79
            },
            __self: this
        }, "My Flix"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 80
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Collapse, {
            className: "justify-content-end",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 81
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Nav, {
            className: "justify-content-end",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 82
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Nav.Link, {
            href: "/",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 83
            },
            __self: this
        }, "Home"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Nav.Link, {
            href: `/users/${user}`,
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 84
            },
            __self: this
        }, "My Account"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Nav.Link, {
            onClick: ()=>this.logOut()
            ,
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 85
            },
            __self: this
        }, "Log Out")))) : /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar, {
            className: "navbar navbar-light bg-light",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 90
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 91
            },
            __self: this
        }, "My Flix"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 92
            },
            __self: this
        })), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 95
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_moviesListDefault.default, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 97
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>{
                if (user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Redirect, {
                    to: "/"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, null)));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 107
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    ),
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 114
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_directorView.DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ).Director,
                    movies: movies,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 126
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/genres/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_genreView.GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ).Genre,
                    onBackClick: ()=>history.goBack()
                    ,
                    movies: movies
                })));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 139
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/users/:user",
            render: ({ history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_profileView.ProfileView, {
                    movies: movies,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 151
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/update/:user",
            render: ({ history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 6
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_profileUpdate.ProfileUpdate, {
                    movies: movies,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "/Users/timtaylor/Documents/myFlix-client-main/src/components/main-view/main-view.jsx",
                lineNumber: 164
            },
            __self: this
        })))));
    }
}
let mapStateToProps = (state)=>{
    return {
        movies: state.movies,
        user: state.user
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actions.setMovies,
    setUser: _actions.setUser
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}